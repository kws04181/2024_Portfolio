{"ast":null,"code":"var _jsxFileName = \"/Users/kim-seong-won/Desktop/2024_\\u1111\\u1169\\u1110\\u1173\\u1111\\u1169\\u11AF\\u1105\\u1175\\u110B\\u1169/src/components/Background.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background = () => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  useEffect(() => {\n    const homeWrapper = document.querySelector(\".homeWrapper\");\n    const handleMouseEnter = () => {\n      setIsHovered(true);\n    };\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n    };\n    if (homeWrapper) {\n      homeWrapper.addEventListener(\"mouseenter\", handleMouseEnter);\n      homeWrapper.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n    return () => {\n      if (homeWrapper) {\n        homeWrapper.removeEventListener(\"mouseenter\", handleMouseEnter);\n        homeWrapper.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []); // 빈 의존성 배열은 컴포넌트가 마운트될 때 한 번만 효과가 실행됨\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `homeWrapper ${isHovered ? \"fade\" : \"\"}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(Background, \"kc8+hhKG3+iGUxqsVUryptgPYnY=\");\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Background","_s","isHovered","setIsHovered","homeWrapper","document","querySelector","handleMouseEnter","handleMouseLeave","addEventListener","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kim-seong-won/Desktop/2024_포트폴리오/src/components/Background.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Background = () => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    const homeWrapper = document.querySelector(\".homeWrapper\");\n\n    const handleMouseEnter = () => {\n      setIsHovered(true);\n    };\n\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n    };\n\n    if (homeWrapper) {\n      homeWrapper.addEventListener(\"mouseenter\", handleMouseEnter);\n      homeWrapper.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (homeWrapper) {\n        homeWrapper.removeEventListener(\"mouseenter\", handleMouseEnter);\n        homeWrapper.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []); // 빈 의존성 배열은 컴포넌트가 마운트될 때 한 번만 효과가 실행됨\n\n  return <div className={`homeWrapper ${isHovered ? \"fade\" : \"\"}`}></div>;\n};\n\nexport default Background;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC;IAE1D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7BJ,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC;IAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;MAC7BL,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAED,IAAIC,WAAW,EAAE;MACfA,WAAW,CAACK,gBAAgB,CAAC,YAAY,EAAEF,gBAAgB,CAAC;MAC5DH,WAAW,CAACK,gBAAgB,CAAC,YAAY,EAAED,gBAAgB,CAAC;IAC9D;IAEA,OAAO,MAAM;MACX,IAAIJ,WAAW,EAAE;QACfA,WAAW,CAACM,mBAAmB,CAAC,YAAY,EAAEH,gBAAgB,CAAC;QAC/DH,WAAW,CAACM,mBAAmB,CAAC,YAAY,EAAEF,gBAAgB,CAAC;MACjE;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOT,OAAA;IAAKY,SAAS,EAAG,eAAcT,SAAS,GAAG,MAAM,GAAG,EAAG;EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzE,CAAC;AAACd,EAAA,CA5BID,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}